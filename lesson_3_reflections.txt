When would you want to use a remote repository rather than keeping all your work local?

The greatest need for a remote repository would be when you plan to have others collaborate on the project that you
are working on.  I could also see it being used as a backup storage option.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

If you are collaborating with others, they may have commited changes that you aren't ready to implement
on your local system yet.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Branches are commits that are created after a certain point in the main project, but not a part of the main project.
They are mainly used to make changes without affecting the main project.  Clones make a copy of a project either from
a remote location, or locally.  Forks are clones that are done exclusively on GitHub.  They create a copy of a repository
on your GitHub profile.

What is the benefit of having a copy of the last known state of the remote stored locally?

It allows you to have a copy of all of the changes on your computer in case you are going to be offline for awhile.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git, collaboration would require a lot of coordination between parties.  There could probably be some sort of 
server set up to store all of the different versions of the files, but someone would have to verify and check the 
differences between them.  With all of that it mind, it seems that Git is definitely the way to go.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You would want to make changes in a separate branch when your changes are going to change a feature in the master
branch.  This gives everyone a chance to look over the changes before committing to them, in case there are errors.

